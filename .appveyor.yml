# AU template: https://github.com/majkinetor/au-packages-template

version: '{build}'
pull_requests:
  do_not_increment_build_number: true
max_jobs: 1
#image: Visual Studio 2015
# History plugin requires complete log
#clone_depth: 5
branches:
  only:
  - master
skip_tags: true
skip_branch_with_pr: true
#build:
#  verbosity: minimal

environment:
  # Set au version to use or omit to use the latest. Specify branch name to use development version from Github
  au_version: master
  au_push: true
  # Use 1 to test all, or N to split testing into N groups
  au_test_groups: 1

  github_user_repo: 'AdmiringWorm/chocolatey-packages'
  # Github token to commit pushed packages to repository
  github_api_key:
    secure: pmwNf8f5uDVc1IdjM+mRpfMsYW6dieBT0znGf6NRUCjE+9LyWUYSQqVcRNPafSx6

  # The gitter webhook to use to publish messages
  gitter_webhook:
    secure: IdcwkBrgIxM2NDj1oTyiuxWBAyCHs63PlFOtIe9qqXWFqJj/GmrkELVnRkH8NGHV/m7wRpUiJyctzHNFb5TuHg==

  # Mail credentials - for error notifications
  mail_user:
    secure: XNJ3ZGH/Nr6Vd7Y5CNCTyISBPfWh8CYm6+htpmgQH+c=
  mail_pass:
    secure: OrQGWbrOhkF1zwioZaDt35EmysMHVFJRdWeR7axzzhE=
  mail_server: smtp.gmail.com
  mail_port: 587
  mail_enablessl: true

  #ID of the gist used to save run results
  gist_id: 747b3ede98c9404e5cb6a399595e7ad1

  #ID of the gist used to save test run results
  gist_id_test: 30a8b66d4c02ecacce2da3c8734ac61f

  #Chocolatey API key - to push updated packages
  api_key:
    secure: CzGGbCfsVKyCTbY193kYveGQDN5ilsyI30J3FYdo9+IpGsDwi/knjzBqCQbztIzY

  #Chocolatey version we want to use when checking for updates.
  choco_version: '0.10.8'
  nupkg_cache_path: C:\packages

init:
- git config --global user.email "chocolatey@realdimensions.net"
- git config --global user.name "Chocolatey"
- git config --global core.safecrlf false

install:
- ps: |
    if (!(Test-Path "$env:nupkg_cache_path")) { mkdir -Force "$env:nupkg_cache_path" }
    @{
      'chocolatey' = $Env:choco_version
      #'optipng'    = '0.7.6'
      #'pngquant'   = '2.10.1'
      #'jpegoptim'  = '1.2.4.4'
      'wormies-au-helpers' = '0.2.2'
    }.GetEnumerator() | % {
      if (!(Test-Path "${env:nupkg_cache_path}\$($_.Key).$($_.Value).nupkg")) { rm "${env:nupkg_cache_path}\$($_.Key).*.nupkg" ; iwr "https://chocolatey.org/api/v2/package/$($_.Key)/$($_.Value)" -OutFile "${env:nupkg_cache_path}\$($_.Key).$($_.Value).nupkg" }
      if ($_.Key -eq 'chocolatey') { cup $_.Key --version $_.Value --source ${env:nupkg_cache_path} }
      else { cinst $_.Key --version $_.Value --source ${env:nupkg_cache_path} --ignore-dependencies }
    }
- ps: 'Get-CimInstance win32_operatingsystem -Property Caption, OSArchitecture, Version | fl Caption, OSArchitecture, Version'
- ps: $PSVersionTable
- git --version
- choco --version
- ps: |
    git clone -q https://github.com/AdmiringWorm/au.git $Env:TEMP/au
    . "$Env:TEMP/au/scripts/Install-AU.ps1" $Env:au_version
- ps: |
    "Build info"
    '  {0,-20} {1}' -f 'SCHEDULED BUILD:', ($Env:APPVEYOR_SCHEDULED_BUILD -eq 'true')
    '  {0,-20} {1}' -f 'FORCED BUILD:'   , ($Env:APPVEYOR_FORCED_BUILD    -eq 'true')
    '  {0,-20} {1}' -f 'RE BUILD:'       , ($Env:APPVEYOR_RE_BUILD        -eq 'true')
build_script:
- ps: |
    $ErrorActionPreference = 'Continue'

    . ./scripts/EventLogs.ps1
    Clear-EventLogs
      # Clean the choco logs as it's quite large
      rm "$env:ChocolateyInstall\logs\*.log"
    if ( ($Env:APPVEYOR_SCHEDULED_BUILD -ne 'true') -and ($Env:APPVEYOR_FORCED_BUILD -ne 'true') ) {
        switch -regex ($Env:APPVEYOR_REPO_COMMIT_MESSAGE)
        {
            '\[AU (.+?)\]'   { $forced = $Matches[1] }
            '\[PUSH (.+?)\]' {
                $packages = $Matches[1] -split ' '
                Write-Host "PUSHING PACKAGES: $packages"
                foreach ($package in $packages) {
                    Write-Host ("{0}`n{1}`n" -f ('-'*60), "PACKAGE: $package")
                    $package_dir = ls -recurse | ? { $_.Name -eq "$package.nuspec"} | select -First 1 | % Directory

                    if (!$package_dir) { Write-Warning "Can't find package '$package'"; continue }
                    pushd $package_dir
                      if (Test-Path update.ps1 -ea 0) { ./update.ps1 }
                      choco pack; Push-Package;
                    popd
                }
                return
            }
        }
    }

    ./update_all.ps1 -ForcedPackages $forced
    Get-EventLogs * | ? Source -eq 'Schannel' | fl * |  out-file eventlogs.txt
on_finish:
- ps: |
    if (Test-Path $Env:TEMP\chocolatey\au) { 7z a  -mx9 au_temp.7z $Env:TEMP\chocolatey\au\* }
    $paths = @(
      Resolve-Path "$env:TEMP\artifacts\*" -ea 0
      'au_temp.7z'
      'update_info.xml'
      'Update-AUPackages.md'
      'eventlogs.txt'
    )
    $paths | ? { Test-Path $_ } | % { Push-AppveyorArtifact $_ }
#- ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

notifications:
  - provider: GitHubPullRequest
    template: "{{#passed}}:white_check_mark: Package verification completed without issues. PR is now pending human review{{/passed}}{{#failed}}:x: Package verification failed, please review the [Appveyor Logs]({{buildUrl}}) and the provided [Artifacts]({{buildUrl}}/artifacts) before requesting a human reviewer to take a look.{{/failed}}"

cache:
  - '%nupkg_cache_path% -> appveyor.yml'
